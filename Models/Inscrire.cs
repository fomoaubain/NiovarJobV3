//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class Inscrire
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Inscrire()
        {
            this.Autre = new HashSet<Autre>();
            this.Education = new HashSet<Education>();
            this.Experience = new HashSet<Experience>();
            this.File = new HashSet<File>();
            this.Information = new HashSet<Information>();
            this.InsAbonne = new HashSet<InsAbonne>();
            this.Location = new HashSet<Location>();
            this.Page = new HashSet<Page>();
            this.Postuler = new HashSet<Postuler>();
            this.Suivre = new HashSet<Suivre>();
        }

        [NotMapped]
        public string couleurFond { get; set; }

        public decimal id { get; set; }
        public string type { get; set; }
        public string nom { get; set; }

        [Display(Name = "Login")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "Login est obligatoire")]
        public string login { get; set; }

        [Display(Name = "Email ")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "Email est obligatoire")]
        [DataType(DataType.EmailAddress)]
        public string email { get; set; }

        [Display(Name = "Password ")]
        [Required(AllowEmptyStrings = false, ErrorMessage = "Password est obligatoire")]
        [DataType(DataType.Password)]
        [MinLength(6, ErrorMessage = "Minimum 6 caractères")]
        public string password { get; set; }
        public string phone { get; set; }
        public string website { get; set; }
        public string description { get; set; }
        public string facebook { get; set; }
        public string linkedin { get; set; }
        public string pays { get; set; }
        public string ville { get; set; }
        public string adresse { get; set; }
        public string lat { get; set; }
        public string titreEmploi { get; set; }
        public string anneeExperience { get; set; }
        public Nullable<decimal> salaireSouhaiter { get; set; }
        public Nullable<decimal> salaireNegocier { get; set; }

        [Display(Name = "Choisir votre profil ")]
        public string profil { get; set; }
        public Nullable<int> etat { get; set; }
        public Nullable<int> status { get; set; }
        public Nullable<int> archived { get; set; }
        public Nullable<System.DateTime> created { get; set; }

        [Display(Name = "Confirm Password")]
        [DataType(DataType.Password)]
        [Compare("password", ErrorMessage = " Mot de passe non identique")]
        public string cpassword { get; set; }

        [Display(Name = "Email professionnel ")]
        [DataType(DataType.EmailAddress)]
        public string emailProf { get; set; }
        public string categorie { get; set; }
        public string domaine { get; set; }
        public string codePostal { get; set; }
        public string nomRepresentant { get; set; }
        public string prenomRepresentant { get; set; }
        public string numeroPoste { get; set; }
        public string province { get; set; }
        public string longitude { get; set; }

        public string countryCode { get; set; }

        public string allowNotification { get; set; }
        public string allowNewsletter { get; set; }
        public string tokenPwdForget { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Autre> Autre { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Education> Education { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Experience> Experience { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<File> File { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Information> Information { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InsAbonne> InsAbonne { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Location> Location { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Page> Page { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Postuler> Postuler { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Suivre> Suivre { get; set; }


        public string fcmToken { get; set; }
    }
}
